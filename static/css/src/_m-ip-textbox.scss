/*
Textbox (UI states)

Input textbox user-interaction states.

Markup:
<div class="m-ip-textbox">
    <label class="m-ip-textbox__label" for="default">Full name</label>
    <input class="m-ip-textbox__input {{modifier_class}}" type="text" id="default" name="full_name" placeholder="Placeholder text">
</div>

:focus - an element that received focus

Styleguide Textbox.UIStates
*/
.m-ip-textbox {
    margin-block-end: 20px;
    position: relative;

    &__label {
        display: block;
        margin-bottom: 5px;
        line-height: 150%;
        text-transform: uppercase;
        font: {
            size: 13.28px;
            weight: bold;
        }
    }

    &__input {
        width: 100%;
        border: 2px solid var(--ip-border);
        padding: 10px 15px;
        color: var(--body-txt);
        background-color: var(--ip-bg);
        border-radius: 6px;
        outline: none;
        font: {
            size: inherit;
            family: inherit;
        }

        &::-webkit-input-placeholder {
            color: var(--ip-placeholder-txt);
        }

        &:focus,
        &.pseudo-class-focus {
            border: 2px solid var(--light-blue);
            background-color: var(--body-bg);
        }

        &:disabled {
            border: 2px solid var(--ip-border--disabled);
            background-color: var(--ip-bg--disabled);
        }

        &:read-only {
            border: 2px solid var(--ip-border);
            background-color: var(--ip-bg);

            &::-webkit-input-placeholder {
                color: var(--body-txt);
            }
        }
    }

    &__help {
        margin-block: -2px 3px;
        color: var(--ip-placeholder-txt);
        font-style: italic;
    }

    &__error {
        margin-block: 0px 3px;
        color: var(--danger);
    }

    &__label + &__error {
        // Usual order is label + help + error + input.
        // Sometimes it is label + error + input
        margin-block: -2px 3px;
    }

    &--has-error &__input {
        border: 2px solid var(--danger);
    }

    &::after {
        content: "";
        --icon-width: 24px;
        --icon-height: 24px;

        position: absolute;
        right: 15px;
        bottom: 10px;
        display: none;
        width: var(--icon-width);
        height: var(--icon-height);
        background-image: url(/static/wicons/sprite-readonly-lock.svg);
        background-size: calc( 2 * var(--icon-width)) var(--icon-height);
        background-position: 0 0;
        background-repeat: no-repeat;

        @media (prefers-color-scheme: dark) {
            background-position-x: calc(-1 * var(--icon-width));
        }
    }

    &:has(&__input:read-only)::after {
        display: block;
    }
}

/*
Textbox (error)

Input textbox error state.

Markup:
<div class="m-ip-textbox m-ip-textbox--has-error">
    <label class="m-ip-textbox__label" for="error">Full name</label>
    <p class="m-ip-textbox__error">How to correct this input</p>
    <input class="m-ip-textbox__input" type="text" id="error" name="full_name" value="Normal text input">
</div>

Styleguide Textbox.Error
*/

/*
Textbox (disabled)

Input textbox disabled state.

Markup:
<div class="m-ip-textbox">
    <label class="m-ip-textbox__label" for="disabled">Full name</label>
    <input class="m-ip-textbox__input" type="text" id="disabled" name="full_name" placeholder="Disabled input"
        disabled>
</div>

Styleguide Textbox.Disabled
*/

/*
Textbox (readonly)

Input textbox readonly state.

Markup:
<div class="m-ip-textbox">
    <label class="m-ip-textbox__label" for="readonly">Full name</label>
    <input class="m-ip-textbox__input" type="text" id="readonly" name="full_name" placeholder="Displayed value"
        readonly>
</div>

Styleguide Textbox.Readonly
*/
